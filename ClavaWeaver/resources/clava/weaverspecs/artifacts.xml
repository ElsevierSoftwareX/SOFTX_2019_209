<?xml version="1.0"?>
<!-- When changing the joinpoint model, do not forget to update the Clava 
	document. https://docs.google.com/document/d/1uPrvuVBXHSbjDTfehpEeLDz9hgIr8EuJJJvBc5A70rs/edit#heading=h.hii8b3kunout -->
<artifacts>

	<!-- Global Joinpoint -->
	<!-- These properties are shared by all joinpoints -->
	<global>
		<attribute name="root" type="joinpoint"
			tooltip="Returns the 'program' joinpoint" />
		<attribute name="parent" type="joinpoint" />
		<attribute name="ancestor" type="joinpoint"
			tooltip="Looks for an ancestor joinpoint name, walking back on the AST">
			<parameter name="type" type="String" />
		</attribute>
		<attribute name="chainAncestor" type="joinpoint"
			tooltip="Looks for an ancestor joinpoint name, walking back on the joinpoint chain">
			<parameter name="type" type="String" />
		</attribute>
		<attribute name="astParent" type="joinpoint" />
		<attribute name="astAncestor" type="joinpoint"
			tooltip="Looks for an ancestor AST name, walking back on the AST">
			<parameter name="type" type="String" />
		</attribute>
		<attribute name="contains" type="Boolean">
			<parameter name="jp" type="joinpoint" />
		</attribute>
		<attribute name="hasParent" type="boolean" />
		<attribute name="hasAstParent" type="boolean" />
		<attribute name="line" type="Integer" />
		<attribute name="location" type="String" />
		<attribute name="astId" type="String" />
		<attribute name="ast" type="String" />
		<attribute name="code" type="String" />
		<attribute name="joinpointType" type="String" />
		<attribute name="type" type="joinpoint" />
		<attribute name="astNumChildren" type="Integer" />
		<attribute name="astName" type="String" />
		<attribute name="astChild" type="joinpoint">
			<parameter name="index" type="Integer" />
		</attribute>
		<attribute name="chain" type="String[]" />
		<attribute name="javaFields" type="String[]" />
		<attribute name="javaValue" type="Object">
			<parameter name="fieldName" type="String" />
		</attribute>
		<attribute name="javaFieldType" type="String">
			<parameter name="fieldName" type="String" />
		</attribute>
		<attribute name="isInsideLoopHeader" type="Boolean"/>
		 <!--  
		<attribute name="setUserField" type="Object">
			<parameter name="fieldName" type="String" />
			<parameter name="value" type="Object" />	
		</attribute> 
		  -->
		<attribute name="getUserField" type="Object">
			<parameter name="fieldName" type="String" />	
		</attribute>
		<attribute name="userField" type="Object">
			<parameter name="fieldName" type="String" />	
		</attribute>
		<attribute name="parentRegion" type="joinpoint" />
		<attribute name="currentRegion" type="joinpoint" />
		<!--  <attribute name="pragmas" type="joinpoint[]" />  -->
	</global>






	<!-- PROGRAM -->
	<artifact class="program" default="name">
		<attribute name="name" type="String" />
		<attribute name="isCxx" type="Boolean" tooltip="true if the program was compiled with a C++ standard"/>
		<attribute name="standard" type="String" tooltip="The name of the standard (e.g., c99, c++11)"/>
		<attribute name="stdFlag" type="String" tooltip="The flag of the standard (e.g., -std=c++11)" />
		<attribute name="defaultFlags" type="String[]" />
		<attribute name="userFlags" type="String[]" />
		<attribute name="includeFolders" type="String[]" />
		<attribute name="baseFolder" type="String" />
		<attribute name="weavingFolder" type="String" />
		<attribute name="extraSources" type="String[]" tooltip="paths to sources that the current program depends on"/>
		<attribute name="extraIncludes" type="String[]" tooltip="paths to includes that the current program depends on"/>		
	</artifact>


	<!-- FILE -->
	<artifact class="file" default="name">
		<attribute name="name" type="String" tooltip="the name of the file"/>
		<attribute name="hasMain" type="Boolean" tooltip="true if this file contains a 'main' method"/>
		<!-- <attribute name="filename" type="String"/> -->
		<attribute name="path" type="String" tooltip="the folder of the source file"/>
		<attribute name="filepath" type="String" tooltip="the complete path to the file"/>
		<attribute name="relativeFilepath" type="String" tooltip="the path to the file relative to the program base folder"/>
		<attribute name="relativeFolderpath" type="String" tooltip="the path to the folder of the source file relative to the program base folder"/>
		<attribute name="isCxx" type="Boolean" tooltip="true if this file is considered a C++ file"/>
		<attribute name="isHeader" type="Boolean" tooltip="true if this file is considered a header file"/>
		<attribute name="isOpenCL" type="Boolean" tooltip="true if this file is an OpenCL filetype"/>
	</artifact>

	<!-- RECORD -->
	<artifact class="record" default="name">
		<attribute name="name" type="String" />
		<attribute name="kind" type="String" />
		<!-- <attribute name="name" type="{struct,interface,union,class,enum}"/> -->
		<attribute name="fields" type="joinpoint[]" />
	</artifact>


	<!-- DECLARATION -->
	<artifact class="namedDecl" default="name">
		<attribute name="name" type="String" />
		<attribute name="isPublic" type="Boolean" />
	</artifact>


	<!-- LOOP -->
	<artifact class="loop" default="kind">
		<attribute name="kind" type="{for,while}" />
		<attribute name="id" type="String" tooltip="Uniquely identifies the loop inside the program"/>
		<attribute name="isInnermost" type="Boolean" />
		<attribute name="isOutermost" type="Boolean" />
		<attribute name="nestedLevel" type="Integer" />
		<attribute name="controlVar" type="String" />
		<attribute name="rank" type="Integer[]" />
		<attribute name="isParallel" type="Boolean" />
		<attribute name="iterations" type="Integer" />
		<attribute name="isInterchangeable" type="Boolean" tooltip="Tests whether the loops are interchangeable. This is a conservative test.">
			<parameter name="otherLoop" type="loop" />	
		</attribute>
		
		<attribute name="initValue" type="String" tooltip="The expression of the first value of the control variable (e.g. '0' in 'size_t i = 0;')"/>
		<attribute name="endValue" type="String" tooltip="The expression of the last value of the control variable (e.g. 'length' in 'i &lt; length;')"/>
	</artifact>


	<!-- SCOPE -->
	<artifact class="scope">
		<attribute name="numStatements" type="Integer" />
	</artifact>


	<!-- EXPRESSION -->
	<artifact class="expression">
		<!-- If this expression represents a declared variable, returns the name 
			of the variable -->
		<!-- <attribute name="refname" type="String"/> -->
		<!-- If this expression represents a declared variable, returns a joinpoint 
			representing the declaration of the variable -->
		<attribute name="vardecl" type="joinpoint" />
		<attribute name="use" type="{read,write,readwrite}" />
		<attribute name="isFunctionArgument" type="Boolean" 
			tooltip="true if the expression is part of an argument of a function call"/>
		<attribute name="implicitCast" type="cast" tooltip="returns a cast joinpoint if this expression has an associated implicit cast, undefined otherwise"/>
    </artifact>

	<!-- CALL -->
	<artifact class="call" default="name">
		<attribute name="name" type="String" />
		<attribute name="numArgs" type="Integer" />
		<attribute name="memberNames" type="String[]" />
		<attribute name="declaration" type="joinpoint"
			tooltip="a 'function' join point that represents the function declaration of the call; 'undefined' if no declaration was found"/>
		<attribute name="definition" type="joinpoint" 
			tooltip="a 'function' join point that represents the function definition of the call; 'undefined' if no definition was found"/>
		<attribute name="argList" type="String[]"/>
		<attribute name="returnType" type="joinpoint"/>
	</artifact>


	<!-- VARDECL -->
	<artifact class="vardecl" default="name">
		<attribute name="hasInit" type="Boolean" tooltip="true, if vardecl has an initialization value" />
		<attribute name="init" type="joinpoint" tooltip="If vardecl has an initialization value, returns an expression with that value"/>
		<attribute name="isParam" type="Boolean" tooltip="true, if vardecl is a function parameter" />
	</artifact>

	<!-- VARREF -->
	<artifact class="varref" default="name">
		<attribute name="name" type="String" />
		<attribute name="kind" type="String" />
		<attribute name="useExpr" type="joinpoint"
			tooltip="expression where this reference is used" />
		<attribute name="isFunctionCall" type="Boolean" 
			tooltip="true if this varref represents a function call" />
	</artifact>

	<!-- FUNCTION -->
	<artifact class="function" default="name">
		<attribute name="name" type="String" />
		<attribute name="hasDefinition" type="Boolean" />
		<attribute name="functionType" type="joinpoint" />
		<attribute name="declarationJp" type="joinpoint" />
		<attribute name="declaration" type="String">
			<parameter name="withReturnType" type="Boolean" />
		</attribute>
		<attribute name="body" type="joinpoint" />
		<attribute name="paramNames" type="String[]"/>
		<attribute name="params" type="joinpoint[]"/>
		<attribute name="id" type="String"/>
	</artifact>


	<!-- IF -->
	<artifact class="if">
		<attribute name="cond" type="joinpoint" />
		<attribute name="condDecl" type="joinpoint" />
		<attribute name="then" type="joinpoint" />
		<attribute name="else" type="joinpoint" />
	</artifact>


	<!-- STATEMENT -->
	<artifact class="statement">
		<attribute name="isFirst" type="Boolean" />
		<attribute name="isLast" type="Boolean" />
		<!-- <attribute name="stmts" type="joinpoint[]"/> -->
	</artifact>
	
	<artifact class="wrapperStmt">
		<attribute name="kind" type="{comment,pragma}" />
		<attribute name="content" type="joinpoint" />
	</artifact>
	
	


	<!-- PRAGMA -->
	<artifact class="pragma">
		<attribute name="name" type="String" />
		<attribute name="target" type="joinpoint" />
		<attribute name="content" type="String"/>
	</artifact>


	<!-- MARKER -->
	<artifact class="marker" default="id">
		<attribute name="id" type="String" />
		<attribute name="contents" type="joinpoint"
			tooltip="A scope, associated with this marker" />
	</artifact>

	<!-- TAG -->
	<artifact class="tag" default="id">
		<attribute name="id" type="String" tooltip="The ID of the pragma"/>
	</artifact>

	<!-- BINARY OPERATOR -->
	<artifact class="binaryOp">
		<attribute name="kind" type="String" />
		<attribute name="left" type="joinpoint" />
		<attribute name="right" type="joinpoint" />
		<attribute name="isAssignment" type="Boolean" />
	</artifact>


	<!-- UNARY OPERATOR -->
	<artifact class="unaryOp">
		<attribute name="kind" type="String" />
		<attribute name="operand" type="joinpoint" />
		<attribute name="isPointerDeref" type="Boolean" />
	</artifact>

	<!-- CAST -->
	<artifact class="cast">
		<attribute name="isImplicitCast" type="Boolean" tooltip="[DEPRECATED] Use expr.implicitCast instead"/> 
		<attribute name="fromType" type="joinpoint" />
		<attribute name="toType" type="joinpoint" />
	</artifact>

	<!-- ARRAY ACCESS -->
	<artifact class="arrayAccess">
		<attribute name="arrayVar" type="joinpoint"
			tooltip="varref to the variable of the array access" />
		<attribute name="subscript" type="joinpoint[]"
			tooltip="expression of the array access subscript" />	
	</artifact>


	<!-- MEMBER ACCESS -->
	<artifact class="memberAccess">
		<attribute name="name" type="String" />
		<attribute name="memberChain" type="String[]" />
		<attribute name="base" type="joinpoint"
			tooltip="expression of the base of this member access" />
	</artifact>


	<!-- COMMENT -->
	<artifact class="comment">
		<attribute name="text" type="String" />
	</artifact>

	<!-- TYPES -->

	<!-- TYPE -->
	<artifact class="type">
		<attribute name="kind" type="String" />
		<attribute name="isTopLevel" type="Boolean" />
		<attribute name="isArray" type="Boolean" />
		<attribute name="isPointer" type="Boolean" />
		<attribute name="arraySize" type="Integer" />
		<attribute name="elementType" type="joinpoint" />
		<attribute name="hasTemplateArgs" type="Boolean" />
		<attribute name="templateArgs" type="String[]" />
		<attribute name="hasSugar" type="Boolean" />
		<attribute name="desugar" type="joinpoint" />
		<attribute name="isBuiltin" type="Boolean" />
		<attribute name="constant" type="Boolean" />
		<attribute name="unwrap" type="type" tooltip="If the type encapsulates another type, returns the encapsulated type" />
	</artifact>



	<!-- ENUMTYPE -->
	<artifact class="enumType">
		<attribute name="integerType" type="joinpoint" />
	</artifact>


	<!-- TEMPLATE SPECIALIZATION TYPE -->
	<artifact class="templateSpecializationType">
		<attribute name="templateName" type="String" />
		<attribute name="numArgs" type="Integer" />
		<attribute name="args" type="String[]" />
		<attribute name="firstArgType" type="type" />
	</artifact>

	<!-- FUNCTION TYPE -->
	<artifact class="functionType">
		<attribute name="returnType" type="joinpoint" />
		<attribute name="paramTypes" type="joinpoint[]" />
	</artifact>


	<!-- TAGTYPE -->
	<artifact class="tagType">
		<attribute name="name" type="String" />
	</artifact>



	<!-- OPENMP -->

	<!-- OMP -->
	<artifact class="omp" default="kind">
		<attribute name="kind" type="String" tooltip="The kind of the directive"/>
		<attribute name="numThreads" type="String" tooltip="An integer expression, or undefined if no 'num_threads' clause is defined"/>
		<attribute name="procBind" type="String" tooltip="One of 'master', 'close' or 'spread', or undefined if no 'proc_bind' clause is defined"/>
		<attribute name="private" type="String[]" tooltip="The variable names of all private clauses, or empty array if no private clause is defined"/>
		<attribute name="hasClause" type="Boolean" tooltip="True if the directive has at least one clause of the given clause kind, false otherwise">
			<parameter name="clauseName" type="String" />
		</attribute>
		<attribute name="isClauseLegal" type="Boolean" tooltip="True if it is legal to use the given clause kind in this directive, false otherwise">
			<parameter name="clauseName" type="String" />
		</attribute>
		<attribute name="clauseKinds" type="String[]"  tooltip="The names of the kinds of all clauses in the pragma, or empty array if no clause is defined"/>
		<attribute name="reduction" type="String[]" tooltip="The variable names for the given reduction kind, or empty array if no reduction of that kind is defined">
			<parameter name="kind" type="String" />
		</attribute>	
		<attribute name="reductionKinds" type="String[]" tooltip="The reduction kinds in the reductions clauses of the this pragma, or empty array if no reduction is defined"/>
		<attribute name="default" type="String" tooltip="One of 'shared' or 'none', or undefined if no 'default' clause is defined"/>
		<attribute name="firstprivate" type="String[]" tooltip="The variable names of all firstprivate clauses, or empty array if no firstprivate clause is defined"/>
		<attribute name="lastprivate" type="String[]" tooltip="The variable names of all lastprivate clauses, or empty array if no lastprivate clause is defined"/>
		<attribute name="shared" type="String[]" tooltip="The variable names of all shared clauses, or empty array if no shared clause is defined"/>
		<attribute name="copyin" type="String[]" tooltip="The variable names of all copyin clauses, or empty array if no copyin clause is defined"/>
		<attribute name="scheduleKind" type="String" tooltip="One of 'static', 'dynamic', 'guided', 'auto' or 'runtime', or undefined if no 'schedule' clause is defined"/>
		<attribute name="scheduleChunkSize" type="String" tooltip="An integer expression, or undefined if no 'schedule' clause with chunk size is defined"/>
		<attribute name="scheduleModifiers" type="String[]" tooltip="A list with possible values of 'monotonic', 'nonmonotonic' or 'simd', or undefined if no 'schedule' clause with modifiers is defined"/>
		<attribute name="collapse" type="String" tooltip="An integer expression, or undefined if no 'collapse' clause is defined"/>
		<attribute name="ordered" type="String" tooltip="An integer expression, or undefined if no 'ordered' clause with a parameter is defined"/>		
	</artifact>

</artifacts>
