aspectdef test

	// has previous value
	call SetNumThreads('parallel', '42');

	// no previous value
	call SetNumThreads('parallel for', 'var');
	
	// can't set
	call SetNumThreads('for', 'xxx');
	
	
	println('-----------------------------------');
	
	// has previous value
	call SetProcBind('parallel', 'spread');

	// no previous value
	call SetProcBind('parallel for', 'close');
	
	// can't set
	call SetProcBind('for', 'xxx');
	
	// test setters of directive parallel
	call SetParallelAttributes();
	
	// set whole omp pragma to custom value. Custom content is not compatible with setting attributes, done after attribute set testing
	call SetCustomContent('parallel', 'parallel private(i)');

end

aspectdef SetNumThreads
	input kind, num end
	
	println(kind);
	
	select omp{kind} end
	apply
        println("num_threads:" + $omp.numThreads);
		exec setNumThreads(num);
        println("num_threads:" + $omp.numThreads);
	end
end

aspectdef SetProcBind
	input kind, proc end
	
	println(kind);
	
	select omp{kind} end
	apply
        println("proc_bind:" + $omp.procBind);
		exec setProcBind(proc);
        println("proc_bind:" + $omp.procBind);
	end
end

aspectdef SetCustomContent
	input kind, content end
	
	println(kind);
	
	select omp{kind} end
	apply
        println("content:" + $omp.content);
		$omp.content = content;
        println("content:" + $omp.content);
	end
end

aspectdef SetParallelAttributes
		
	select omp{'parallel'} end
	apply
        println("parallel content before:" + $omp.content);
		var sumReduction = $omp.reduction('+');
		sumReduction.push('b');
		$omp.exec setReduction('+', sumReduction);
		println("parallel content after:" + $omp.content);
	end
end
