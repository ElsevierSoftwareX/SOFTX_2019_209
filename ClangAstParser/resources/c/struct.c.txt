
struct struct_test {
   int struct_field_1;
   char struct_field_2;
};


struct struct_test_with_var {
   int struct_field_1;
   char struct_field_2;
};

struct struct_test_with_var struct_test_var;

struct struct_test_with_typedef {
   int struct_field_1;
   char struct_field_2;
};

typedef struct struct_test_with_typedef custom_struct;

struct anon_struct_c_17 {
   int struct_field_1;
   char struct_field_2;
};

struct anon_struct_c_17 struct_anon_var;
struct anon_struct_c_17 struct_anon_var_2;

union union_test {
   int union_field_1;
   char union_field_2;
};


struct struct_without_definition;


struct struct_without_definition {
   int struct_field_1;
   char struct_field_2;
};


union anon_struct_c_34 {
   int union_field_1;
   char union_field_2;
};

union anon_struct_c_34 union_anon_var;

struct anon_struct_c_40 {
	int ch1;
	float ch2;
};

typedef struct anon_struct_c_40 loic_struct;

struct aligned_struct {
	short f[3];
} __attribute__((aligned(8)));

struct point {
  double x;
  double y;
};
struct point ptarray[10] = {[2].y = 1.0, [2].x = 2.0, [0].x = 1.0, [4 ... 6].x = 3.0};

int int_array[10][10] = {[2][3] = 1, [4][5] = 2};

struct point pt = {.x = 1.0, .y = 2.0};

struct node {
 struct node *next;
 int idx;
 void (*dummy[32]) ();
};

int main() {
}
